{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#Exponential Smoothing in Python using Pandas and/or Base Python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Library/anaconda/lib/python3.6/site-packages/ggplot/utils.py:81: FutureWarning: pandas.tslib is deprecated and will be removed in a future version.\n",
      "You can access Timestamp as pandas.Timestamp\n",
      "  pd.tslib.Timestamp,\n",
      "/Library/anaconda/lib/python3.6/site-packages/ggplot/stats/smoothers.py:4: FutureWarning: The pandas.lib module is deprecated and will be removed in a future version. These are private functions and can be accessed from pandas._libs.lib instead\n",
      "  from pandas.lib import Timestamp\n",
      "/Library/anaconda/lib/python3.6/site-packages/statsmodels/compat/pandas.py:56: FutureWarning: The pandas.core.datetools module is deprecated and will be removed in a future version. Please use the pandas.tseries module instead.\n",
      "  from pandas.core import datetools\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from ggplot import *\n",
    "from matplotlib import pyplot as plt\n",
    "import math\n",
    "import statsmodels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Store</th>\n",
       "      <th>Date</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>Fuel_Price</th>\n",
       "      <th>MarkDown1</th>\n",
       "      <th>MarkDown2</th>\n",
       "      <th>MarkDown3</th>\n",
       "      <th>MarkDown4</th>\n",
       "      <th>MarkDown5</th>\n",
       "      <th>CPI</th>\n",
       "      <th>Unemployment</th>\n",
       "      <th>IsHoliday</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2010-02-05</td>\n",
       "      <td>42.31</td>\n",
       "      <td>2.572</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>211.096358</td>\n",
       "      <td>8.106</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2010-02-12</td>\n",
       "      <td>38.51</td>\n",
       "      <td>2.548</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>211.242170</td>\n",
       "      <td>8.106</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2010-02-19</td>\n",
       "      <td>39.93</td>\n",
       "      <td>2.514</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>211.289143</td>\n",
       "      <td>8.106</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2010-02-26</td>\n",
       "      <td>46.63</td>\n",
       "      <td>2.561</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>211.319643</td>\n",
       "      <td>8.106</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2010-03-05</td>\n",
       "      <td>46.50</td>\n",
       "      <td>2.625</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>211.350143</td>\n",
       "      <td>8.106</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Store        Date  Temperature  Fuel_Price  MarkDown1  MarkDown2  \\\n",
       "0      1  2010-02-05        42.31       2.572        NaN        NaN   \n",
       "1      1  2010-02-12        38.51       2.548        NaN        NaN   \n",
       "2      1  2010-02-19        39.93       2.514        NaN        NaN   \n",
       "3      1  2010-02-26        46.63       2.561        NaN        NaN   \n",
       "4      1  2010-03-05        46.50       2.625        NaN        NaN   \n",
       "\n",
       "   MarkDown3  MarkDown4  MarkDown5         CPI  Unemployment  IsHoliday  \n",
       "0        NaN        NaN        NaN  211.096358         8.106      False  \n",
       "1        NaN        NaN        NaN  211.242170         8.106       True  \n",
       "2        NaN        NaN        NaN  211.289143         8.106      False  \n",
       "3        NaN        NaN        NaN  211.319643         8.106      False  \n",
       "4        NaN        NaN        NaN  211.350143         8.106      False  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "features = pd.read_csv(\"~/Documents/Walmart Data/features.csv\")\n",
    "features.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8190, 12)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "features.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Store</th>\n",
       "      <th>Dept</th>\n",
       "      <th>Date</th>\n",
       "      <th>Weekly_Sales</th>\n",
       "      <th>IsHoliday</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2010-02-05</td>\n",
       "      <td>24924.50</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2010-02-12</td>\n",
       "      <td>46039.49</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2010-02-19</td>\n",
       "      <td>41595.55</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2010-02-26</td>\n",
       "      <td>19403.54</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2010-03-05</td>\n",
       "      <td>21827.90</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Store  Dept        Date  Weekly_Sales  IsHoliday\n",
       "0      1     1  2010-02-05      24924.50      False\n",
       "1      1     1  2010-02-12      46039.49       True\n",
       "2      1     1  2010-02-19      41595.55      False\n",
       "3      1     1  2010-02-26      19403.54      False\n",
       "4      1     1  2010-03-05      21827.90      False"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pre_train = pd.read_csv(\"~/Documents/Walmart Data/train 2.csv\")\n",
    "pre_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(421570, 5)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pre_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Store</th>\n",
       "      <th>Type</th>\n",
       "      <th>Size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>A</td>\n",
       "      <td>151315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>A</td>\n",
       "      <td>202307</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>B</td>\n",
       "      <td>37392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>A</td>\n",
       "      <td>205863</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>B</td>\n",
       "      <td>34875</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Store Type    Size\n",
       "0      1    A  151315\n",
       "1      2    A  202307\n",
       "2      3    B   37392\n",
       "3      4    A  205863\n",
       "4      5    B   34875"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stores = pd.read_csv(\"~/Documents/Walmart Data/stores.csv\")\n",
    "stores.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(45, 3)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stores.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "true_train = pd.merge(pd.merge(pre_train, features, how = 'left',\n",
    "                               left_on = ['Store', 'Date'], right_on = ['Store', 'Date']), \n",
    "                      stores, left_on = ['Store'], right_on = ['Store'])\n",
    "true_train['Date'] = pd.to_datetime(true_train['Date'])\n",
    "true_train = true_train.drop(['IsHoliday_y', 'Type', 'MarkDown1', \n",
    "                             'MarkDown2', 'MarkDown3', 'MarkDown4',\n",
    "                             'MarkDown5', 'Store', 'Dept', 'IsHoliday_x',\n",
    "                             'Temperature', 'Fuel_Price', 'CPI', 'Unemployment',\n",
    "                             'Size'], 1)\n",
    "true_train2 = true_train.sort_values('Date')\n",
    "true_train2 = true_train2.set_index(true_train2['Date'])\n",
    "true_train2 = true_train2.drop('Date',1)\n",
    "\n",
    "n = 415000\n",
    "train = true_train2.iloc[range(n),:]\n",
    "test = true_train2.iloc[range(n, true_train2.shape[0]),:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(415000, 1)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6570, 1)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#Single Exponential Smoothing through base Python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def exponential_smoothing(series, alpha):\n",
    "    \"\"\"\n",
    "    Simple function that forecasts the next point for a series dataset\n",
    "    \n",
    "    Parameters\n",
    "    ----------\n",
    "    series: numpy Array\n",
    "        Must be one-dimensional time-series data\n",
    "    alpha: float\n",
    "        The smoothing rate, usually 0 < alpha < 1\n",
    "        \n",
    "    Returns\n",
    "    -------\n",
    "    result: numpy Array\n",
    "        Returns the forecast for the series dataset\n",
    "    \"\"\"\n",
    "    result = [series[0]] # first value is same as series\n",
    "    for n in range(1, len(series)):\n",
    "        result.append(alpha * series[n] + (1 - alpha) * result[n-1])\n",
    "    return np.array(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1165d1da0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pred = exponential_smoothing(train.values[0:100], alpha = .8)\n",
    "plt.plot(train.values[0:100], label = 'actual')\n",
    "plt.plot(pred, label = 'predicted')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train MAE 3711.479\n",
      "Train MSE 34104076.654\n"
     ]
    }
   ],
   "source": [
    "pred = exponential_smoothing(train.values, alpha = .8)\n",
    "mae = mean_absolute_error(train.values, pred)\n",
    "mse = mean_squared_error(train.values, pred)\n",
    "print('Train MAE %.3f' % mae)\n",
    "print('Train MSE %.3f' % mse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test MAE: 1777.174\n",
      "Test MSE: 7920229.087\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import mean_absolute_error\n",
    "from sklearn.metrics import mean_squared_error\n",
    "pred = exponential_smoothing(test.values, alpha = .9)\n",
    "mae = mean_absolute_error(test.values, pred)\n",
    "mse = mean_squared_error(test.values, pred)\n",
    "print('Test MAE: %.3f' % mae)\n",
    "print('Test MSE: %.3f' % mse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#Double Exponential Additive Smoothing in Python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def double_exponential_smoothing(series, alpha, beta):\n",
    "    \"\"\"\n",
    "    A function that performs double exponential smoothing on a timeseries dataset.\n",
    "    \n",
    "    Parameters\n",
    "    ----------\n",
    "    series: numpy Array\n",
    "        Must be one-dimensional time-series data\n",
    "    alpha: float\n",
    "        The smoothing rate, usually 0 < alpha < 1\n",
    "    beta: float\n",
    "        The trend, usually 0 < beta < 1  \n",
    "        \n",
    "    Returns\n",
    "    -------\n",
    "    result: numpy Array\n",
    "        An array of the forecast for the time series dataset\n",
    "    \"\"\"\n",
    "    result = [series[0]]\n",
    "    for n in range(1, len(series)+1):\n",
    "        if n == 1:\n",
    "            level, trend = series[0], series[1] - series[0]\n",
    "        if n >= len(series): # we are forecasting\n",
    "          value = result[-1]\n",
    "        else:\n",
    "          value = series[n]\n",
    "        last_level, level = level, alpha*value + (1-alpha)*(level+trend)\n",
    "        trend = beta*(level-last_level) + (1-beta)*trend\n",
    "        result.append(level+trend)\n",
    "    return np.array(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x116e49978>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pred = double_exponential_smoothing(train.values[0:100], alpha = .9, beta = .1)\n",
    "plt.plot(train.values[0:100], label = 'actual')\n",
    "plt.plot(pred, label = 'predicted')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train MAE: 1547.836\n",
      "Train MSE: 5381385.937\n"
     ]
    }
   ],
   "source": [
    "pred = double_exponential_smoothing(train.values, alpha = .9, beta = .1)\n",
    "mae = mean_absolute_error(train.values, pred[range(0, len(pred) -1)])\n",
    "mse = mean_squared_error(train.values, pred[range(0, len(pred)- 1)])\n",
    "print('Train MAE: %.3f' % mae)\n",
    "print('Train MSE: %.3f' % mse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test MAE: 1469.172\n",
      "Test MSE: 4736433.552\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import mean_absolute_error\n",
    "from sklearn.metrics import mean_squared_error\n",
    "pred = double_exponential_smoothing(test.values, alpha = .9, beta = .1)\n",
    "mae = mean_absolute_error(test.values, pred[range(0, len(pred)-1)])\n",
    "mse = mean_squared_error(test.values, pred[range(0, len(pred)-1)])\n",
    "print('Test MAE: %.3f' % mae)\n",
    "print('Test MSE: %.3f' % mse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#Triple Exponential Additive Smoothing through base Python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "def initial_trend(series, slen):\n",
    "    \"\"\"\n",
    "    Calculates the average of trend averages across seasons\n",
    "    \n",
    "    Parameters\n",
    "    ----------\n",
    "    series: numpy Array\n",
    "        Must be one-dimensional time-series dataset\n",
    "    slen: int\n",
    "        Number of data points after which a new season begins\n",
    "        \n",
    "    Returns\n",
    "    -------\n",
    "    sum/slen: int\n",
    "        The average of trend averages for a defined season\n",
    "    \"\"\"\n",
    "    sum = 0.0\n",
    "    for i in range(slen):\n",
    "        sum += float(series[i+slen] - series[i]) / slen\n",
    "    return sum / slen\n",
    "\n",
    "def initial_seasonal_components(series, slen):\n",
    "    \"\"\"\n",
    "    Calculates the average level for every observed season with each observed value being \n",
    "    divided by the average of the season it's in , with us then averaging each of \n",
    "    these across each observed season.\n",
    "    \n",
    "    Parameters\n",
    "    ----------\n",
    "    series: numpy Array\n",
    "        Must be one-dimensional time-series dataset\n",
    "    slen: int\n",
    "        Number of data points after which a new season begins\n",
    "    \n",
    "    Returns\n",
    "    -------\n",
    "    seasonals: list\n",
    "        Array of the calculated averages\n",
    "    \"\"\"\n",
    "    seasonals = {}\n",
    "    season_averages = []\n",
    "    n_seasons = int(len(series)/slen)\n",
    "    # compute season averages\n",
    "    for j in range(n_seasons):\n",
    "        season_averages.append(sum(series[slen*j:slen*j+slen])/float(slen))\n",
    "    # compute initial values\n",
    "    for i in range(slen):\n",
    "        sum_of_vals_over_avg = 0.0\n",
    "        for j in range(n_seasons):\n",
    "            sum_of_vals_over_avg += series[slen*j+i]-season_averages[j]\n",
    "        seasonals[i] = sum_of_vals_over_avg/n_seasons\n",
    "    return seasonals\n",
    "\n",
    "def triple_exponential_smoothing(series, slen, alpha, beta, gamma, n_preds):\n",
    "    \"\"\"\n",
    "    A function that performs triple exponential smoothing on a time-series dataset\n",
    "    \n",
    "    Parameters\n",
    "    ----------\n",
    "    series: numpy Array\n",
    "        Must be one-dimensional time-series data\n",
    "    slen: int\n",
    "        Number of data points after which a new season begins\n",
    "    alpha: float\n",
    "        The smoothing rate, usually 0 < alpha < 1\n",
    "    beta: float\n",
    "        The trend rate, usually 0 < beta < 1\n",
    "    gamma: float\n",
    "        Smoothing factor of the seasonal component, usually 0 < gamma < 1\n",
    "    npreds: int\n",
    "        The number of additional predictions we wish to make\n",
    "        \n",
    "    Returns\n",
    "    -------\n",
    "    result: numpy Array\n",
    "        An array of the forecast for seasonal data\n",
    "    \"\"\"\n",
    "    result = []\n",
    "    seasonals = initial_seasonal_components(series, slen)\n",
    "    for i in range(len(series)+n_preds):\n",
    "        if i == 0: # initial values\n",
    "            smooth = series[0]\n",
    "            trend = initial_trend(series, slen)\n",
    "            result.append(series[0])\n",
    "            continue\n",
    "        if i >= len(series): # we are forecasting\n",
    "            m = i - len(series) + 1\n",
    "            result.append((smooth + m*trend) + seasonals[i%slen])\n",
    "        else:\n",
    "            val = series[i]\n",
    "            last_smooth, smooth = smooth, alpha*(val-seasonals[i%slen]) +\\\n",
    "            (1-alpha)*(smooth+trend)\n",
    "            trend = beta * (smooth-last_smooth) + (1-beta)*trend\n",
    "            seasonals[i%slen] = gamma*(val-smooth) + (1-gamma)*seasonals[i%slen]\n",
    "            result.append(smooth+trend+seasonals[i%slen])\n",
    "    return np.array(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nJo4//viGKritaEc0jgZWNCxrjsw9ZUXDslD27NnDqaeeygc/+EFOO+00rrjiCiYmJti+fTuf+tSn\nOO+88/j2t7/N888/z2WXXcb555/P29/+9np9qhdffJG3vvWtnHXWWfzRH/1Rw3nPPDOtshTHMX/w\nB3/AmWeeydlnn81f/MVfcOONN7J//34uvvhiLr74YgC+//3v89a3vpXzzjuPK6+8krGxMSAt1X7q\nqady3nnn8Td/8zeL/m/QTml0i2VFo5loaNjlkVja5q5Pw4HHF/ecx54F//pzcx727LPPcvPNN/O2\nt72N3/u93+NLX/oSABs3buSRRx4B4JJLLuEv//Iv2blzJw8++CAf+9jHuPfee/nEJz7BRz/6Ua6+\n+mq++MUvtjz/TTfdxJ49e3jsscfwPK9ez+oLX/gCP/zhD9m0aRMHDx7kT//0T/nBD35AT08Pn//8\n5/nCF77AJz/5Sa677jruvfdeTj755HpZk8XEioZlzZEY94FnRcPSBieccAJve9vbAPjQhz7EjTfe\nCFB/QI+NjfGTn/yEK6+cqsNaraYTSX/84x/zne98B4Df+Z3f4VOf+tS08//gBz/gIx/5CJ6XPp5b\nlVt/4IEHeOqpp+rjqNVqvPWtb+WZZ55hx44d7Ny5sz6+bLGoxcKKhmXtYdxSnlr31IplHhbB0aJ5\ngaTs76wIYZIkrFu3jscee2xe/dtBVXnXu97FN7/5zYb2mT5zMbExDcuaIwuE+9bSsLTByy+/zP33\n3w/AN77xDX7lV36lYX9/fz87duzg29/+NpA+4H/2s58B8La3vY3bbrsNSNfSaMW73vUu/vt//+9E\nUXqdHj6cLiPU19fH6OgoABdddBE//vGP2b17NwDj4+P84he/4NRTT2XPnj08//zzANNEZTGwomFZ\nc9RjGiSQLDzTxbK2OeWUU/jiF7/IaaedxtDQEB/96EenHfP1r3+dm2++mXPOOYczzjijvvb3n//5\nn/PFL36Rs846i3379k3rB/D7v//7nHjiiZx99tmcc845fOMb3wDgwx/+MJdddhkXX3wxmzdv5itf\n+Qof+MAHOPvss+uuqWKxyE033cSv//qvc95553HMMccs+ve3pdEta44n/8f/wxm7jZ/3D1+FoNzd\nAVnmxXIojb5nzx7e85738MQTT3R1HJ1iS6NbLAsgc08BttKtxbJArGhY1h5JTjTskq+WBbB9+/YV\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x118231e48>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pred = triple_exponential_smoothing(train.values[0:100], slen = 20, alpha = .9, beta = .1, \n",
    "                                   gamma = .8, n_preds = 0)\n",
    "plt.plot(train.values[0:100], label = 'actual')\n",
    "plt.plot(pred, label = 'predicted')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test MAE: 1941766115724139167744.000\n",
      "Test MSE: 116072838276044112083799994318441393097277440.000\n"
     ]
    }
   ],
   "source": [
    "pred = triple_exponential_smoothing(train.values, slen = 20, alpha = .9, beta = .1, \n",
    "                                   gamma = .5, n_preds = 0)\n",
    "mae = mean_absolute_error(train.values, pred)\n",
    "mse = mean_squared_error(train.values, pred)\n",
    "print('Test MAE: %.3f' % mae)\n",
    "print('Test MSE: %.3f' % mse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test MAE: 1068.972\n",
      "Test MSE: 2193054.735\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import mean_absolute_error\n",
    "from sklearn.metrics import mean_squared_error\n",
    "pred = triple_exponential_smoothing(test.values, slen = 40, alpha = .9, beta = .1, \n",
    "                                   gamma = .5, n_preds = 0)\n",
    "mae = mean_absolute_error(test.values, pred)\n",
    "mse = mean_squared_error(test.values, pred)\n",
    "print('Test MAE: %.3f' % mae)\n",
    "print('Test MSE: %.3f' % mse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "pred = triple_exponential_smoothing(train.values, slen = 52, alpha = .9, beta = .1, \n",
    "                                   gamma = .5, n_preds = len(test.values))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x116d08748>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(test.values, label = 'actual')\n",
    "plt.plot(pred[range(len(train.values),len(train.values) + len(test.values))], label = 'predicted')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test MAE: 9337324270883728.000\n"
     ]
    }
   ],
   "source": [
    "mae = mean_absolute_error(test.values, \n",
    "                          pred[range(len(train.values),len(train.values) + len(test.values))])\n",
    "print('Test MAE: %.3f' % mae)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6570, 1)"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pred[range(len(train.values),len(train.values) + len(test.values))].shape"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
